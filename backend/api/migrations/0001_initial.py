# Generated by Django 5.1.6 on 2025-03-18 13:22

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import shortuuid.main
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course_unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_unit_code', models.CharField(max_length=10)),
                ('course_unit_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Registration_Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('lecturer', 'lecturer'), ('academic_registrar', 'academic_registrar')], max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('token', models.CharField(default=shortuuid.main.ShortUUID.uuid, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('confirm_password', models.CharField(max_length=50)),
                ('role', models.CharField(choices=[('student', 'Student'), ('lecturer', 'lecturer'), ('academic_registrar', 'academic_registrar')], max_length=30)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=20)),
                ('city', models.CharField(max_length=30)),
                ('token', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_name', models.CharField(max_length=100)),
                ('course_units', models.ManyToManyField(blank=True, related_name='course_units', to='api.course_unit')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('missing_marks', 'Missing Marks'), ('appeal', 'Appeal'), ('correction', 'Correction')], max_length=30)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='issues/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved'), ('in_progress', 'In Progress')], default='pending', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year_of_study', models.CharField(choices=[('1st_year', '1st Year'), ('2nd_year', '2nd Year'), ('3rd_year', '3rd Year'), ('4th_year', '4th Year'), ('5th_year', '5th Year')], max_length=20)),
                ('semester', models.CharField(choices=[('one', 'One'), ('two', 'Two')], max_length=10)),
                ('course_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course_unit')),
                ('lecturer', models.ForeignKey(limit_choices_to={'role': 'lecturer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lecturer_issues', to=settings.AUTH_USER_MODEL)),
                ('registrar', models.ForeignKey(limit_choices_to={'role': 'academic_registrar'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrar_issues', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.program')),
            ],
            options={
                'ordering': ['updated_at', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='api.program'),
        ),
    ]
